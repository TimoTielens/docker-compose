version: "3.8"
services:
  dmsrdb:
    image: postgres:${DSMR_DB_IMAGE_VERSION:? dsmr database version required} 
    hostname: ${DSMR_DB_NAME:? dsmr database name required}
    container_name: ${DSMR_DB_NAME:? dsmr database name required}
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE:? timezone required}
      - PG_TZ=${TIMEZONE:? timezone required}
      - POSTGRES_USER=${DSMR_DB_USER:? dsmr database user required}
      - POSTGRES_PASSWORD=${DSMR_DB_PASSWORD:? dsmr database password required}
      - POSTGRES_DB=${DSMR_DB_DB:? dsmr database name required}
    healthcheck:
      # postgres is the default user, please update with
      # the DJANGO_DATABASE_USER used for dsmr-reader-docker
      # default for DSMR Reader is dsmrreader
      test: [ "CMD-SHELL", "pg_isready -U dsmrreader" ]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
      -  dsmrback
  dsmr:
    image: ghcr.io/xirixiz/dsmr-reader-docker:${DSMR_IMAGE_VERSION:? dsmr version required} 
    hostname: ${DSMR_NAME:? dsmr name required}
    container_name: ${DSMR_NAME:? dsmr name required}
    restart: unless-stopped
    depends_on:
      dsmrdb:
        condition: service_healthy
    links:
      - dsmrdb
    environment:
      - TZ=${TIMEZONE:? timezone required}
      - DJANGO_TIME_ZONE=${TIMEZONE:? timezone required}
      - VIRTUAL_HOST=localhost
    ports:
      - 7777:80
      - 7779:443
    cap_add:
      - NET_ADMIN
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-Lsf",
          "http://127.0.0.1/about",
          "-o",
          "/dev/null",
          "-w",
          "HTTP_%{http_code}"
        ]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - ./dsmr/backups:/app/backups
    devices:
      - "/dev/ttyUSB1:/dev/ttyUSB0"
    networks:
      -  dsmrfront
      -  dsmrback